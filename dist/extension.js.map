{"version":3,"file":"extension.js","mappings":"23BAGA,oBAAyBA,GAErB,MAAMC,EAAaC,EAAOC,SAASC,gBAAgB,6BAA6BC,MAAOC,IACnF,IAEI,MAAMC,EAAeL,EAAOM,WAAWC,aAAa,eAAeC,QACnE,IAAKH,EAED,YADAL,EAAOS,OAAOC,iBAAiB,4BAInC,MAAMC,EAAMN,EAAaO,OAAO,GAChC,GAAgC,IAA5BD,EAAIE,aAAaC,OAEjB,YADAd,EAAOS,OAAOM,uBAAuB,8BAIzC,MAAMC,EAAOL,EAAIE,aAAa,GACxBI,EAAYD,EAAKE,MAAMC,QAAQC,MAAMC,GAAsB,WAAXA,EAAEC,QAAoBC,UAAY,YAClFC,EAAgBR,EAAKE,MAAMO,MAAMH,MAAQ,YAE/CtB,EAAOS,OAAOM,uBAAuB,cAAcE,KACnDjB,EAAOS,OAAOM,uBAAuB,kBAAkBS,KACvDxB,EAAOS,OAAOM,uBAAuB,YAAYW,KAAKC,UAAUvB,KAgBpE,CAAE,MAAOwB,GACL5B,EAAOS,OAAOC,iBAAiB,UAAUkB,EAAMC,UACnD,KAGJ/B,EAAQgC,cAAcC,KAAKhC,EAC/B,EAhDA,iB,UCAAiC,EAAOxB,QAAUyB,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa9B,QAGrB,IAAIwB,EAASE,EAAyBG,GAAY,CAGjD7B,QAAS,CAAC,GAOX,OAHAgC,EAAoBH,GAAUI,KAAKT,EAAOxB,QAASwB,EAAQA,EAAOxB,QAAS4B,GAGpEJ,EAAOxB,OACf,CCnB0B4B,CAAoB,K","sources":["webpack://test99/./src/extension.ts","webpack://test99/external commonjs \"vscode\"","webpack://test99/webpack/bootstrap","webpack://test99/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport axios from 'axios';\n\nexport function activate(context: vscode.ExtensionContext) {\n    // Регистрируем команду для отправки запроса\n    const disposable = vscode.commands.registerCommand('test99.sendGitPostRequest', async (fileUri?: vscode.Uri) => {\n        try {\n            // 1. Получаем данные из Git\n            const gitExtension = vscode.extensions.getExtension('vscode.git')?.exports;\n            if (!gitExtension) {\n                vscode.window.showErrorMessage('Git extension not found!');\n                return;\n            }\n\n            const git = gitExtension.getAPI(1);\n            if (git.repositories.length === 0) {\n                vscode.window.showInformationMessage('No Git repositories found.');\n                return;\n            }\n\n            const repo = git.repositories[0];\n            const remoteUrl = repo.state.remotes.find((r: any) => r.name === 'origin')?.fetchUrl || 'undefined';\n            const currentBranch = repo.state.HEAD?.name || 'undefined';\n\n            vscode.window.showInformationMessage(`remoteUrl: ${remoteUrl}`);\n            vscode.window.showInformationMessage(`currentBranch: ${currentBranch}`);\n            vscode.window.showInformationMessage(`fileUri: ${JSON.stringify(fileUri)}`);\n            // 2. Отправляем POST-запрос\n            // const response = await axios.post(\n            //     'https://your-api-endpoint.com', // Замени на свой URL\n            //     {\n            //         remoteRepositoryUrl: remoteUrl,\n            //         currentBranch: currentBranch\n            //     },\n            //     {\n            //         headers: {\n            //             'Authorization': 'Bearer YOUR_BEARER_TOKEN' // Замени на свой токен\n            //         }\n            //     }\n            // );\n\n            // vscode.window.showInformationMessage(`Request sent! Response: ${JSON.stringify(response.data)}`);\n        } catch (error: any) {\n            vscode.window.showErrorMessage(`Error: ${error.message}`);\n        }\n    });\n\n    context.subscriptions.push(disposable);\n}","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","disposable","vscode","commands","registerCommand","async","fileUri","gitExtension","extensions","getExtension","exports","window","showErrorMessage","git","getAPI","repositories","length","showInformationMessage","repo","remoteUrl","state","remotes","find","r","name","fetchUrl","currentBranch","HEAD","JSON","stringify","error","message","subscriptions","push","module","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}